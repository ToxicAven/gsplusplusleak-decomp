// 
// Decompiled by Procyon v0.5.36
// 

package com.gamesense.client.module.modules.exploits;

import net.minecraft.init.Items;
import java.util.Iterator;
import net.minecraft.network.play.client.CPacketPlayerTryUseItem;
import net.minecraft.util.EnumHand;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketHeldItemChange;
import net.minecraft.entity.player.EntityPlayer;
import java.util.List;
import net.minecraft.entity.Entity;
import net.minecraft.entity.item.EntityXPOrb;
import net.minecraft.item.ItemStack;
import com.gamesense.api.setting.values.IntegerSetting;
import com.gamesense.api.setting.values.BooleanSetting;
import com.gamesense.client.module.Category;
import com.gamesense.client.module.Module;

@Declaration(name = "PacketXP", category = Category.Exploits)
public class PacketXP extends Module
{
    BooleanSetting sneakOnly;
    BooleanSetting noEntityCollision;
    BooleanSetting silentSwitch;
    IntegerSetting minDamage;
    IntegerSetting maxHeal;
    BooleanSetting predict;
    char toMend;
    
    public PacketXP() {
        this.sneakOnly = this.registerBoolean("Sneak Only", true);
        this.noEntityCollision = this.registerBoolean("No Collision", true);
        this.silentSwitch = this.registerBoolean("Silent Switch", true);
        this.minDamage = this.registerInteger("Min Damage", 50, 1, 100);
        this.maxHeal = this.registerInteger("Repair To", 90, 1, 100);
        this.predict = this.registerBoolean("Predict", false);
        this.toMend = '\0';
    }
    
    @Override
    public void onUpdate() {
        if (PacketXP.mc.field_71439_g == null || PacketXP.mc.field_71441_e == null || PacketXP.mc.field_71439_g.field_70173_aa < 10) {
            return;
        }
        int sumOfDamage = 0;
        final List<ItemStack> armour = (List<ItemStack>)PacketXP.mc.field_71439_g.field_71071_by.field_70460_b;
        for (int i = 0; i < armour.size(); ++i) {
            final ItemStack itemStack = armour.get(i);
            if (!itemStack.field_190928_g) {
                final float damageOnArmor = (float)(itemStack.func_77958_k() - itemStack.func_77952_i());
                final float damagePercent = 100.0f - 100.0f * (1.0f - damageOnArmor / itemStack.func_77958_k());
                if (damagePercent <= this.maxHeal.getValue()) {
                    if (damagePercent <= this.minDamage.getValue()) {
                        this.toMend |= (char)(1 << i);
                    }
                    if (this.predict.getValue()) {
                        sumOfDamage += (int)(itemStack.func_77958_k() * this.maxHeal.getValue() / 100.0f - (itemStack.func_77958_k() - itemStack.func_77952_i()));
                    }
                }
                else {
                    this.toMend &= (char)~(1 << i);
                }
            }
        }
        if (this.toMend > '\0') {
            if (this.predict.getValue()) {
                final int totalXp = PacketXP.mc.field_71441_e.field_72996_f.stream().filter(entity -> entity instanceof EntityXPOrb).filter(entity -> entity.func_70068_e((Entity)PacketXP.mc.field_71439_g) <= 1.0).mapToInt(entity -> entity.field_70530_e).sum();
                if (totalXp * 2 < sumOfDamage) {
                    this.mendArmor(PacketXP.mc.field_71439_g.field_71071_by.field_70461_c);
                }
            }
            else {
                this.mendArmor(PacketXP.mc.field_71439_g.field_71071_by.field_70461_c);
            }
        }
    }
    
    private void mendArmor(final int oldSlot) {
        if (this.noEntityCollision.getValue()) {
            for (final EntityPlayer entityPlayer : PacketXP.mc.field_71441_e.field_73010_i) {
                if (entityPlayer.func_70032_d((Entity)PacketXP.mc.field_71439_g) < 1.0f && entityPlayer != PacketXP.mc.field_71439_g) {
                    return;
                }
            }
        }
        if (this.sneakOnly.getValue() && !PacketXP.mc.field_71439_g.func_70093_af()) {
            return;
        }
        final int newSlot = this.findXPSlot();
        if (newSlot == -1) {
            return;
        }
        if (oldSlot != newSlot) {
            if (this.silentSwitch.getValue()) {
                PacketXP.mc.field_71439_g.field_71174_a.func_147297_a((Packet)new CPacketHeldItemChange(newSlot));
            }
            else {
                PacketXP.mc.field_71439_g.field_71071_by.field_70461_c = newSlot;
            }
            PacketXP.mc.field_71442_b.func_78750_j();
        }
        PacketXP.mc.field_71439_g.field_71174_a.func_147297_a((Packet)new CPacketPlayer.Rotation(0.0f, 90.0f, true));
        PacketXP.mc.field_71439_g.field_71174_a.func_147297_a((Packet)new CPacketPlayerTryUseItem(EnumHand.MAIN_HAND));
        if (this.silentSwitch.getValue()) {
            PacketXP.mc.field_71439_g.field_71174_a.func_147297_a((Packet)new CPacketHeldItemChange(oldSlot));
        }
        else {
            PacketXP.mc.field_71439_g.field_71071_by.field_70461_c = oldSlot;
        }
        PacketXP.mc.field_71442_b.func_78750_j();
    }
    
    private int findXPSlot() {
        int slot = -1;
        for (int i = 0; i < 9; ++i) {
            if (PacketXP.mc.field_71439_g.field_71071_by.func_70301_a(i).func_77973_b() == Items.field_151062_by) {
                slot = i;
                break;
            }
        }
        return slot;
    }
}
